{"version":3,"file":"NFT5073.js","sources":["../node_modules/near-sdk-js/lib/utils.js","../node_modules/near-sdk-js/lib/types/vm_types.js","../node_modules/@scure/base/lib/esm/index.js","../node_modules/near-sdk-js/lib/types/public_key.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/collections/lookup-map.js","../node_modules/near-sdk-js/lib/collections/vector.js","../node_modules/near-sdk-js/lib/collections/unordered-map.js","../node_modules/near-sdk-js/lib/collections/unordered-set.js","../node_modules/near-sdk-js/lib/promise.js","../src/token.ts","../src/contract.ts"],"sourcesContent":["// make PromiseIndex a nominal typing\nvar PromiseIndexBrand;\n(function (PromiseIndexBrand) {\n    PromiseIndexBrand[PromiseIndexBrand[\"_\"] = -1] = \"_\";\n})(PromiseIndexBrand || (PromiseIndexBrand = {}));\nconst TYPE_KEY = \"typeInfo\";\nvar TypeBrand;\n(function (TypeBrand) {\n    TypeBrand[\"BIGINT\"] = \"bigint\";\n    TypeBrand[\"DATE\"] = \"date\";\n})(TypeBrand || (TypeBrand = {}));\nexport const ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nexport const ERR_INDEX_OUT_OF_BOUNDS = \"Index out of bounds\";\nconst ACCOUNT_ID_REGEX = /^(([a-z\\d]+[-_])*[a-z\\d]+\\.)*([a-z\\d]+[-_])*[a-z\\d]+$/;\nexport function u8ArrayToBytes(array) {\n    return array.reduce((result, value) => `${result}${String.fromCharCode(value)}`, \"\");\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    return Uint8Array.from([...bytes].map((byte) => byte.charCodeAt(0)));\n}\n/**\n * Accepts a string or Uint8Array and either checks for the validity of the string or converts the Uint8Array to Bytes.\n *\n * @param stringOrU8Array - The string or Uint8Array to be checked/transformed\n * @returns Safe Bytes to be used in NEAR calls.\n */\nexport function bytes(stringOrU8Array) {\n    if (typeof stringOrU8Array === \"string\") {\n        return checkStringIsBytes(stringOrU8Array);\n    }\n    if (stringOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(stringOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(value) {\n    [...value].forEach((character, index) => {\n        assert(character.charCodeAt(0) <= 255, `string ${value} at index ${index}: ${character} is not a valid byte`);\n    });\n    return value;\n}\n/**\n * Asserts that the expression passed to the function is truthy, otherwise throws a new Error with the provided message.\n *\n * @param expression - The expression to be asserted.\n * @param message - The error message to be printed.\n */\nexport function assert(expression, message) {\n    if (!expression) {\n        throw new Error(\"assertion failed: \" + message);\n    }\n}\nexport function getValueWithOptions(value, options = {\n    deserializer: deserialize,\n}) {\n    const deserialized = deserialize(value);\n    if (deserialized === undefined || deserialized === null) {\n        return options?.defaultValue ?? null;\n    }\n    if (options?.reconstructor) {\n        return options.reconstructor(deserialized);\n    }\n    return deserialized;\n}\nexport function serializeValueWithOptions(value, { serializer } = {\n    serializer: serialize,\n}) {\n    return serializer(value);\n}\nexport function serialize(valueToSerialize) {\n    return JSON.stringify(valueToSerialize, function (key, value) {\n        if (typeof value === \"bigint\") {\n            return {\n                value: value.toString(),\n                [TYPE_KEY]: TypeBrand.BIGINT,\n            };\n        }\n        if (typeof this[key] === \"object\" &&\n            this[key] !== null &&\n            this[key] instanceof Date) {\n            return {\n                value: this[key].toISOString(),\n                [TYPE_KEY]: TypeBrand.DATE,\n            };\n        }\n        return value;\n    });\n}\nexport function deserialize(valueToDeserialize) {\n    return JSON.parse(valueToDeserialize, (_, value) => {\n        if (value !== null &&\n            typeof value === \"object\" &&\n            Object.keys(value).length === 2 &&\n            Object.keys(value).every((key) => [\"value\", TYPE_KEY].includes(key))) {\n            switch (value[TYPE_KEY]) {\n                case TypeBrand.BIGINT:\n                    return BigInt(value[\"value\"]);\n                case TypeBrand.DATE:\n                    return new Date(value[\"value\"]);\n            }\n        }\n        return value;\n    });\n}\n/**\n * Validates the Account ID according to the NEAR protocol\n * [Account ID rules](https://nomicon.io/DataStructures/Account#account-id-rules).\n *\n * @param accountId - The Account ID string you want to validate.\n */\nexport function validateAccountId(accountId) {\n    return (accountId.length >= 2 &&\n        accountId.length <= 64 &&\n        ACCOUNT_ID_REGEX.test(accountId));\n}\n","/**\n * A Promise result in near can be one of:\n * - NotReady = 0 - the promise you are specifying is still not ready, not yet failed nor successful.\n * - Successful = 1 - the promise has been successfully executed and you can retrieve the resulting value.\n * - Failed = 2 - the promise execution has failed.\n */\nexport var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\n/**\n * A promise error can either be due to the promise failing or not yet being ready.\n */\nexport var PromiseError;\n(function (PromiseError) {\n    PromiseError[PromiseError[\"Failed\"] = 0] = \"Failed\";\n    PromiseError[PromiseError[\"NotReady\"] = 1] = \"NotReady\";\n})(PromiseError || (PromiseError = {}));\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","import { bytes } from \"../utils\";\nimport { base58 } from \"@scure/base\";\nexport var CurveType;\n(function (CurveType) {\n    CurveType[CurveType[\"ED25519\"] = 0] = \"ED25519\";\n    CurveType[CurveType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(CurveType || (CurveType = {}));\nvar DataLength;\n(function (DataLength) {\n    DataLength[DataLength[\"ED25519\"] = 32] = \"ED25519\";\n    DataLength[DataLength[\"SECP256K1\"] = 64] = \"SECP256K1\";\n})(DataLength || (DataLength = {}));\nfunction getCurveType(curveType) {\n    switch (curveType) {\n        case CurveType.ED25519:\n        case CurveType.SECP256K1:\n            return curveType;\n        default:\n            throw new UnknownCurve();\n    }\n}\nfunction dataLength(curveType) {\n    switch (curveType) {\n        case CurveType.ED25519:\n        case CurveType.SECP256K1:\n            return {\n                [CurveType.ED25519]: DataLength.ED25519,\n                [CurveType.SECP256K1]: DataLength.SECP256K1,\n            }[curveType];\n        default:\n            throw new UnknownCurve();\n    }\n}\nfunction splitKeyTypeData(value) {\n    const idx = value.indexOf(\":\");\n    if (idx >= 0) {\n        return [\n            curveTypeFromStr(value.substring(0, idx)),\n            value.substring(idx + 1),\n        ];\n    }\n    else {\n        return [CurveType.ED25519, value];\n    }\n}\nexport function curveTypeFromStr(value) {\n    switch (value) {\n        case \"ed25519\":\n            return CurveType.ED25519;\n        case \"secp256k1\":\n            return CurveType.SECP256K1;\n        default:\n            throw new UnknownCurve();\n    }\n}\nexport class ParsePublicKeyError extends Error {\n}\nexport class InvalidLengthError extends ParsePublicKeyError {\n    constructor(length, expectedLength) {\n        super(`Invalid length: ${length}. Expected: ${expectedLength}`);\n        this.length = length;\n        this.expectedLength = expectedLength;\n    }\n}\nexport class Base58Error extends ParsePublicKeyError {\n    constructor(error) {\n        super(`Base58 error: ${error}`);\n        this.error = error;\n    }\n}\nexport class UnknownCurve extends ParsePublicKeyError {\n    constructor() {\n        super(\"Unknown curve\");\n    }\n}\n/**\n * A abstraction on top of the NEAR public key string.\n */\nexport class PublicKey {\n    /**\n     * @param data - The string you want to create a PublicKey from.\n     */\n    constructor(data) {\n        const curveLenght = dataLength(data.charCodeAt(0));\n        if (data.length !== curveLenght + 1) {\n            throw new InvalidLengthError(data.length, curveLenght + 1);\n        }\n        this.type = getCurveType(data.charCodeAt(0));\n        this.data = data;\n    }\n    /**\n     * The curve type of the public key.\n     */\n    curveType() {\n        return this.type;\n    }\n    /**\n     * Create a public key from a public key string.\n     *\n     * @param publicKeyString - The public key string you want to create a PublicKey from.\n     */\n    static fromString(publicKeyString) {\n        const [curve, keyData] = splitKeyTypeData(publicKeyString);\n        let data;\n        try {\n            data = bytes(base58.decode(keyData));\n        }\n        catch (error) {\n            throw new Base58Error(error.message);\n        }\n        return new PublicKey(`${String.fromCharCode(curve)}${data}`);\n    }\n}\n","import { assert } from \"./utils\";\nimport { PromiseResult } from \"./types\";\nconst U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\n/**\n * Logs parameters in the NEAR WASM virtual machine.\n *\n * @param params - Parameters to log.\n */\nexport function log(...params) {\n    env.log(params.reduce((accumulated, parameter, index) => {\n        // Stringify undefined\n        const param = parameter === undefined ? \"undefined\" : parameter;\n        // Convert Objects to strings and convert to string\n        const stringified = typeof param === \"object\" ? JSON.stringify(param) : `${param}`;\n        if (index === 0) {\n            return stringified;\n        }\n        return `${accumulated} ${stringified}`;\n    }, \"\"));\n}\n/**\n * Returns the account ID of the account that signed the transaction.\n * Can only be called in a call or initialize function.\n */\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\n/**\n * Returns the public key of the account that signed the transaction.\n * Can only be called in a call or initialize function.\n */\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\n/**\n * Returns the account ID of the account that called the function.\n * Can only be called in a call or initialize function.\n */\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\n/**\n * Returns the account ID of the current contract - the contract that is being executed.\n */\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\n/**\n * Returns the current block index.\n */\nexport function blockIndex() {\n    return env.block_index();\n}\n/**\n * Returns the current block height.\n */\nexport function blockHeight() {\n    return blockIndex();\n}\n/**\n * Returns the current block timestamp.\n */\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\n/**\n * Returns the current epoch height.\n */\nexport function epochHeight() {\n    return env.epoch_height();\n}\n/**\n * Returns the amount of NEAR attached to this function call.\n * Can only be called in payable functions.\n */\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\n/**\n * Returns the amount of Gas that was attached to this function call.\n */\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\n/**\n * Returns the amount of Gas that has been used by this function call until now.\n */\nexport function usedGas() {\n    return env.used_gas();\n}\n/**\n * Returns the current account's account balance.\n */\nexport function accountBalance() {\n    return env.account_balance();\n}\n/**\n * Returns the current account's locked balance.\n */\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\n/**\n * Reads the value from NEAR storage that is stored under the provided key.\n *\n * @param key - The key to read from storage.\n */\nexport function storageRead(key) {\n    const returnValue = env.storage_read(key, 0);\n    if (returnValue !== 1n) {\n        return null;\n    }\n    return env.read_register(0);\n}\n/**\n * Checks for the existance of a value under the provided key in NEAR storage.\n *\n * @param key - The key to check for in storage.\n */\nexport function storageHasKey(key) {\n    return env.storage_has_key(key) === 1n;\n}\n/**\n * Get the last written or removed value from NEAR storage.\n */\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\n/**\n * Returns the current accounts NEAR storage usage.\n */\nexport function storageUsage() {\n    return env.storage_usage();\n}\n/**\n * Writes the provided bytes to NEAR storage under the provided key.\n *\n * @param key - The key under which to store the value.\n * @param value - The value to store.\n */\nexport function storageWrite(key, value) {\n    return env.storage_write(key, value, EVICTED_REGISTER) === 1n;\n}\n/**\n * Removes the value of the provided key from NEAR storage.\n *\n * @param key - The key to be removed.\n */\nexport function storageRemove(key) {\n    return env.storage_remove(key, EVICTED_REGISTER) === 1n;\n}\n/**\n * Returns the cost of storing 0 Byte on NEAR storage.\n */\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n/**\n * Returns the arguments passed to the current smart contract call.\n */\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\n/**\n * Returns the value from the NEAR WASM virtual machine.\n *\n * @param value - The value to return.\n */\nexport function valueReturn(value) {\n    env.value_return(value);\n}\n/**\n * Returns a random string of bytes.\n */\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\n/**\n * Create a NEAR promise call to a contract on the blockchain.\n *\n * @param accountId - The account ID of the target contract.\n * @param methodName - The name of the method to be called.\n * @param args - The arguments to call the method with.\n * @param amount - The amount of NEAR attached to the call.\n * @param gas - The amount of Gas attached to the call.\n */\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\n/**\n * Attach a callback NEAR promise to be executed after a provided promise.\n *\n * @param promiseIndex - The promise after which to call the callback.\n * @param accountId - The account ID of the contract to perform the callback on.\n * @param methodName - The name of the method to call.\n * @param args - The arguments to call the method with.\n * @param amount - The amount of NEAR to attach to the call.\n * @param gas - The amount of Gas to attach to the call.\n */\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\n/**\n * Join an arbitrary array of NEAR promises.\n *\n * @param promiseIndexes - An arbitrary array of NEAR promise indexes to join.\n */\nexport function promiseAnd(...promiseIndexes) {\n    return env.promise_and(...promiseIndexes);\n}\n/**\n * Create a NEAR promise which will have multiple promise actions inside.\n *\n * @param accountId - The account ID of the target contract.\n */\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\n/**\n * Attach a callback NEAR promise to a batch of NEAR promise actions.\n *\n * @param promiseIndex - The NEAR promise index of the batch.\n * @param accountId - The account ID of the target contract.\n */\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\n/**\n * Attach a create account promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a create account action to.\n */\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\n/**\n * Attach a deploy contract promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a deploy contract action to.\n * @param code - The WASM byte code of the contract to be deployed.\n */\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\n/**\n * Attach a function call promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a function call action to.\n * @param methodName - The name of the method to be called.\n * @param args - The arguments to call the method with.\n * @param amount - The amount of NEAR to attach to the call.\n * @param gas - The amount of Gas to attach to the call.\n */\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\n/**\n * Attach a transfer promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a transfer action to.\n * @param amount - The amount of NEAR to transfer.\n */\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\n/**\n * Attach a stake promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a stake action to.\n * @param amount - The amount of NEAR to stake.\n * @param publicKey - The public key with which to stake.\n */\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\n/**\n * Attach a add full access key promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a add full access key action to.\n * @param publicKey - The public key to add as a full access key.\n * @param nonce - The nonce to use.\n */\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\n/**\n * Attach a add access key promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a add access key action to.\n * @param publicKey - The public key to add.\n * @param nonce - The nonce to use.\n * @param allowance - The allowance of the access key.\n * @param receiverId - The account ID of the receiver.\n * @param methodNames - The names of the method to allow the key for.\n */\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\n/**\n * Attach a delete key promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a delete key action to.\n * @param publicKey - The public key to delete.\n */\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\n/**\n * Attach a delete account promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a delete account action to.\n * @param beneficiaryId - The account ID of the beneficiary - the account that receives the remaining amount of NEAR.\n */\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\n/**\n * Attach a function call with weight promise action to the NEAR promise index with the provided promise index.\n *\n * @param promiseIndex - The index of the promise to attach a function call with weight action to.\n * @param methodName - The name of the method to be called.\n * @param args - The arguments to call the method with.\n * @param amount - The amount of NEAR to attach to the call.\n * @param gas - The amount of Gas to attach to the call.\n * @param weight - The weight of unused Gas to use.\n */\nexport function promiseBatchActionFunctionCallWeight(promiseIndex, methodName, args, amount, gas, weight) {\n    env.promise_batch_action_function_call_weight(promiseIndex, methodName, args, amount, gas, weight);\n}\n/**\n * The number of promise results available.\n */\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\n/**\n * Returns the result of the NEAR promise for the passed promise index.\n *\n * @param promiseIndex - The index of the promise to return the result for.\n */\nexport function promiseResult(promiseIndex) {\n    const status = env.promise_result(promiseIndex, 0);\n    assert(Number(status) === PromiseResult.Successful, `Promise result ${status == PromiseResult.Failed\n        ? \"Failed\"\n        : status == PromiseResult.NotReady\n            ? \"NotReady\"\n            : status}`);\n    return env.read_register(0);\n}\n/**\n * Executes the promise in the NEAR WASM virtual machine.\n *\n * @param promiseIndex - The index of the promise to execute.\n */\nexport function promiseReturn(promiseIndex) {\n    env.promise_return(promiseIndex);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    const returnValue = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (returnValue === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\n// NOTE: \"env.panic(msg)\" is not exported, use \"throw Error(msg)\" instead\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    return env.alt_bn128_pairing_check(value) === 1n;\n}\n","import * as near from \"./api\";\nimport { deserialize, serialize } from \"./utils\";\n/**\n * Tells the SDK to use this function as the initialization function of the contract.\n *\n * @param _empty - An empty object.\n */\nexport function initialize(_empty) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (_target, _key, _descriptor\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ) { };\n}\n/**\n * Tells the SDK to expose this function as a view function.\n *\n * @param _empty - An empty object.\n */\nexport function view(_empty) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (_target, _key, _descriptor\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ) { };\n}\nexport function call({ privateFunction = false, payableFunction = false, }) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (_target, _key, descriptor) {\n        const originalMethod = descriptor.value;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        descriptor.value = function (...args) {\n            if (privateFunction &&\n                near.predecessorAccountId() !== near.currentAccountId()) {\n                throw new Error(\"Function is private\");\n            }\n            if (!payableFunction && near.attachedDeposit() > 0n) {\n                throw new Error(\"Function is not payable\");\n            }\n            return originalMethod.apply(this, args);\n        };\n    };\n}\n/**\n * Tells the SDK to apply an array of passed in middleware to the function execution.\n *\n * @param middlewares - The middlewares to be executed.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function middleware(...middlewares) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return function (_target, _key, descriptor) {\n        const originalMethod = descriptor.value;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        descriptor.value = function (...args) {\n            try {\n                middlewares.forEach((middleware) => middleware(...args));\n            }\n            catch (error) {\n                throw new Error(error);\n            }\n            return originalMethod.apply(this, args);\n        };\n    };\n}\nexport function NearBindgen({ requireInit = false, serializer = serialize, deserializer = deserialize, }) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (target) => {\n        return class extends target {\n            static _create() {\n                return new target();\n            }\n            static _getState() {\n                const rawState = near.storageRead(\"STATE\");\n                return rawState ? this._deserialize(rawState) : null;\n            }\n            static _saveToStorage(objectToSave) {\n                near.storageWrite(\"STATE\", this._serialize(objectToSave));\n            }\n            static _getArgs() {\n                return JSON.parse(near.input() || \"{}\");\n            }\n            static _serialize(value, forReturn = false) {\n                if (forReturn) {\n                    return JSON.stringify(value, (_, value) => typeof value === \"bigint\" ? `${value}` : value);\n                }\n                return serializer(value);\n            }\n            static _deserialize(value) {\n                return deserializer(value);\n            }\n            static _reconstruct(classObject, plainObject) {\n                for (const item in classObject) {\n                    const reconstructor = classObject[item].constructor?.reconstruct;\n                    classObject[item] = reconstructor\n                        ? reconstructor(plainObject[item])\n                        : plainObject[item];\n                }\n                return classObject;\n            }\n            static _requireInit() {\n                return requireInit;\n            }\n        };\n    };\n}\n","import * as near from \"../api\";\nimport { getValueWithOptions, serializeValueWithOptions, } from \"../utils\";\n/**\n * A lookup map that stores data in NEAR storage.\n */\nexport class LookupMap {\n    /**\n     * @param keyPrefix - The byte prefix to use when storing elements inside this collection.\n     */\n    constructor(keyPrefix) {\n        this.keyPrefix = keyPrefix;\n    }\n    /**\n     * Checks whether the collection contains the value.\n     *\n     * @param key - The value for which to check the presence.\n     */\n    containsKey(key) {\n        const storageKey = this.keyPrefix + key;\n        return near.storageHasKey(storageKey);\n    }\n    /**\n     * Get the data stored at the provided key.\n     *\n     * @param key - The key at which to look for the data.\n     * @param options - Options for retrieving the data.\n     */\n    get(key, options) {\n        const storageKey = this.keyPrefix + key;\n        const value = near.storageRead(storageKey);\n        return getValueWithOptions(value, options);\n    }\n    /**\n     * Removes and retrieves the element with the provided key.\n     *\n     * @param key - The key at which to remove data.\n     * @param options - Options for retrieving the data.\n     */\n    remove(key, options) {\n        const storageKey = this.keyPrefix + key;\n        if (!near.storageRemove(storageKey)) {\n            return options?.defaultValue ?? null;\n        }\n        const value = near.storageGetEvicted();\n        return getValueWithOptions(value, options);\n    }\n    /**\n     * Store a new value at the provided key.\n     *\n     * @param key - The key at which to store in the collection.\n     * @param newValue - The value to store in the collection.\n     * @param options - Options for retrieving and storing the data.\n     */\n    set(key, newValue, options) {\n        const storageKey = this.keyPrefix + key;\n        const storageValue = serializeValueWithOptions(newValue, options);\n        if (!near.storageWrite(storageKey, storageValue)) {\n            return options?.defaultValue ?? null;\n        }\n        const value = near.storageGetEvicted();\n        return getValueWithOptions(value, options);\n    }\n    /**\n     * Extends the current collection with the passed in array of key-value pairs.\n     *\n     * @param keyValuePairs - The key-value pairs to extend the collection with.\n     * @param options - Options for storing the data.\n     */\n    extend(keyValuePairs, options) {\n        for (const [key, value] of keyValuePairs) {\n            this.set(key, value, options);\n        }\n    }\n    /**\n     * Serialize the collection.\n     *\n     * @param options - Options for storing the data.\n     */\n    serialize(options) {\n        return serializeValueWithOptions(this, options);\n    }\n    /**\n     * Converts the deserialized data from storage to a JavaScript instance of the collection.\n     *\n     * @param data - The deserialized data to create an instance from.\n     */\n    static reconstruct(data) {\n        return new LookupMap(data.keyPrefix);\n    }\n}\n","import * as near from \"../api\";\nimport { assert, getValueWithOptions, u8ArrayToBytes, serializeValueWithOptions, ERR_INCONSISTENT_STATE, ERR_INDEX_OUT_OF_BOUNDS, } from \"../utils\";\nfunction indexToKey(prefix, index) {\n    const data = new Uint32Array([index]);\n    const array = new Uint8Array(data.buffer);\n    const key = u8ArrayToBytes(array);\n    return prefix + key;\n}\n/**\n * An iterable implementation of vector that stores its content on the trie.\n * Uses the following map: index -> element\n */\nexport class Vector {\n    /**\n     * @param prefix - The byte prefix to use when storing elements inside this collection.\n     * @param length - The initial length of the collection. By default 0.\n     */\n    constructor(prefix, length = 0) {\n        this.prefix = prefix;\n        this.length = length;\n    }\n    /**\n     * Checks whether the collection is empty.\n     */\n    isEmpty() {\n        return this.length === 0;\n    }\n    /**\n     * Get the data stored at the provided index.\n     *\n     * @param index - The index at which to look for the data.\n     * @param options - Options for retrieving the data.\n     */\n    get(index, options) {\n        if (index >= this.length) {\n            return options?.defaultValue ?? null;\n        }\n        const storageKey = indexToKey(this.prefix, index);\n        const value = near.storageRead(storageKey);\n        return getValueWithOptions(value, options);\n    }\n    /**\n     * Removes an element from the vector and returns it in serialized form.\n     * The removed element is replaced by the last element of the vector.\n     * Does not preserve ordering, but is `O(1)`.\n     *\n     * @param index - The index at which to remove the element.\n     * @param options - Options for retrieving and storing the data.\n     */\n    swapRemove(index, options) {\n        assert(index < this.length, ERR_INDEX_OUT_OF_BOUNDS);\n        if (index + 1 === this.length) {\n            return this.pop(options);\n        }\n        const key = indexToKey(this.prefix, index);\n        const last = this.pop(options);\n        assert(near.storageWrite(key, serializeValueWithOptions(last, options)), ERR_INCONSISTENT_STATE);\n        const value = near.storageGetEvicted();\n        return getValueWithOptions(value, options);\n    }\n    /**\n     * Adds data to the collection.\n     *\n     * @param element - The data to store.\n     * @param options - Options for storing the data.\n     */\n    push(element, options) {\n        const key = indexToKey(this.prefix, this.length);\n        this.length += 1;\n        near.storageWrite(key, serializeValueWithOptions(element, options));\n    }\n    /**\n     * Removes and retrieves the element with the highest index.\n     *\n     * @param options - Options for retrieving the data.\n     */\n    pop(options) {\n        if (this.isEmpty()) {\n            return options?.defaultValue ?? null;\n        }\n        const lastIndex = this.length - 1;\n        const lastKey = indexToKey(this.prefix, lastIndex);\n        this.length -= 1;\n        assert(near.storageRemove(lastKey), ERR_INCONSISTENT_STATE);\n        const value = near.storageGetEvicted();\n        return getValueWithOptions(value, options);\n    }\n    /**\n     * Replaces the data stored at the provided index with the provided data and returns the previously stored data.\n     *\n     * @param index - The index at which to replace the data.\n     * @param element - The data to replace with.\n     * @param options - Options for retrieving and storing the data.\n     */\n    replace(index, element, options) {\n        assert(index < this.length, ERR_INDEX_OUT_OF_BOUNDS);\n        const key = indexToKey(this.prefix, index);\n        assert(near.storageWrite(key, serializeValueWithOptions(element, options)), ERR_INCONSISTENT_STATE);\n        const value = near.storageGetEvicted();\n        return getValueWithOptions(value, options);\n    }\n    /**\n     * Extends the current collection with the passed in array of elements.\n     *\n     * @param elements - The elements to extend the collection with.\n     */\n    extend(elements) {\n        for (const element of elements) {\n            this.push(element);\n        }\n    }\n    [Symbol.iterator]() {\n        return new VectorIterator(this);\n    }\n    /**\n     * Create a iterator on top of the default collection iterator using custom options.\n     *\n     * @param options - Options for retrieving and storing the data.\n     */\n    createIteratorWithOptions(options) {\n        return {\n            [Symbol.iterator]: () => new VectorIterator(this, options),\n        };\n    }\n    /**\n     * Return a JavaScript array of the data stored within the collection.\n     *\n     * @param options - Options for retrieving and storing the data.\n     */\n    toArray(options) {\n        const array = [];\n        const iterator = options ? this.createIteratorWithOptions(options) : this;\n        for (const value of iterator) {\n            array.push(value);\n        }\n        return array;\n    }\n    /**\n     * Remove all of the elements stored within the collection.\n     */\n    clear() {\n        for (let index = 0; index < this.length; index++) {\n            const key = indexToKey(this.prefix, index);\n            near.storageRemove(key);\n        }\n        this.length = 0;\n    }\n    /**\n     * Serialize the collection.\n     *\n     * @param options - Options for storing the data.\n     */\n    serialize(options) {\n        return serializeValueWithOptions(this, options);\n    }\n    /**\n     * Converts the deserialized data from storage to a JavaScript instance of the collection.\n     *\n     * @param data - The deserialized data to create an instance from.\n     */\n    static reconstruct(data) {\n        const vector = new Vector(data.prefix, data.length);\n        return vector;\n    }\n}\n/**\n * An iterator for the Vector collection.\n */\nexport class VectorIterator {\n    /**\n     * @param vector - The vector collection to create an iterator for.\n     * @param options - Options for retrieving and storing data.\n     */\n    constructor(vector, options) {\n        this.vector = vector;\n        this.options = options;\n        this.current = 0;\n    }\n    next() {\n        if (this.current >= this.vector.length) {\n            return { value: null, done: true };\n        }\n        const value = this.vector.get(this.current, this.options);\n        this.current += 1;\n        return { value, done: false };\n    }\n}\n","import { assert, ERR_INCONSISTENT_STATE, getValueWithOptions, serializeValueWithOptions, } from \"../utils\";\nimport { Vector, VectorIterator } from \"./vector\";\nimport { LookupMap } from \"./lookup-map\";\n/**\n * An unordered map that stores data in NEAR storage.\n */\nexport class UnorderedMap {\n    /**\n     * @param prefix - The byte prefix to use when storing elements inside this collection.\n     */\n    constructor(prefix) {\n        this.prefix = prefix;\n        this.keys = new Vector(`${prefix}u`); // intentional different prefix with old UnorderedMap\n        this.values = new LookupMap(`${prefix}m`);\n    }\n    /**\n     * The number of elements stored in the collection.\n     */\n    get length() {\n        return this.keys.length;\n    }\n    /**\n     * Checks whether the collection is empty.\n     */\n    isEmpty() {\n        return this.keys.isEmpty();\n    }\n    /**\n     * Get the data stored at the provided key.\n     *\n     * @param key - The key at which to look for the data.\n     * @param options - Options for retrieving the data.\n     */\n    get(key, options) {\n        const valueAndIndex = this.values.get(key);\n        if (valueAndIndex === null) {\n            return options?.defaultValue ?? null;\n        }\n        const [value] = valueAndIndex;\n        return getValueWithOptions(value, options);\n    }\n    /**\n     * Store a new value at the provided key.\n     *\n     * @param key - The key at which to store in the collection.\n     * @param value - The value to store in the collection.\n     * @param options - Options for retrieving and storing the data.\n     */\n    set(key, value, options) {\n        const valueAndIndex = this.values.get(key);\n        const serialized = serializeValueWithOptions(value, options);\n        if (valueAndIndex === null) {\n            const newElementIndex = this.length;\n            this.keys.push(key);\n            this.values.set(key, [serialized, newElementIndex]);\n            return null;\n        }\n        const [oldValue, oldIndex] = valueAndIndex;\n        this.values.set(key, [serialized, oldIndex]);\n        return getValueWithOptions(oldValue, options);\n    }\n    /**\n     * Removes and retrieves the element with the provided key.\n     *\n     * @param key - The key at which to remove data.\n     * @param options - Options for retrieving the data.\n     */\n    remove(key, options) {\n        const oldValueAndIndex = this.values.remove(key);\n        if (oldValueAndIndex === null) {\n            return options?.defaultValue ?? null;\n        }\n        const [value, index] = oldValueAndIndex;\n        assert(this.keys.swapRemove(index) !== null, ERR_INCONSISTENT_STATE);\n        // the last key is swapped to key[index], the corresponding [value, index] need update\n        if (!this.keys.isEmpty() && index !== this.keys.length) {\n            // if there is still elements and it was not the last element\n            const swappedKey = this.keys.get(index);\n            const swappedValueAndIndex = this.values.get(swappedKey);\n            assert(swappedValueAndIndex !== null, ERR_INCONSISTENT_STATE);\n            this.values.set(swappedKey, [swappedValueAndIndex[0], index]);\n        }\n        return getValueWithOptions(value, options);\n    }\n    /**\n     * Remove all of the elements stored within the collection.\n     */\n    clear() {\n        for (const key of this.keys) {\n            // Set instead of remove to avoid loading the value from storage.\n            this.values.set(key, null);\n        }\n        this.keys.clear();\n    }\n    [Symbol.iterator]() {\n        return new UnorderedMapIterator(this);\n    }\n    /**\n     * Create a iterator on top of the default collection iterator using custom options.\n     *\n     * @param options - Options for retrieving and storing the data.\n     */\n    createIteratorWithOptions(options) {\n        return {\n            [Symbol.iterator]: () => new UnorderedMapIterator(this, options),\n        };\n    }\n    /**\n     * Return a JavaScript array of the data stored within the collection.\n     *\n     * @param options - Options for retrieving and storing the data.\n     */\n    toArray(options) {\n        const array = [];\n        const iterator = options ? this.createIteratorWithOptions(options) : this;\n        for (const value of iterator) {\n            array.push(value);\n        }\n        return array;\n    }\n    /**\n     * Extends the current collection with the passed in array of key-value pairs.\n     *\n     * @param keyValuePairs - The key-value pairs to extend the collection with.\n     */\n    extend(keyValuePairs) {\n        for (const [key, value] of keyValuePairs) {\n            this.set(key, value);\n        }\n    }\n    /**\n     * Serialize the collection.\n     *\n     * @param options - Options for storing the data.\n     */\n    serialize(options) {\n        return serializeValueWithOptions(this, options);\n    }\n    /**\n     * Converts the deserialized data from storage to a JavaScript instance of the collection.\n     *\n     * @param data - The deserialized data to create an instance from.\n     */\n    static reconstruct(data) {\n        const map = new UnorderedMap(data.prefix);\n        // reconstruct keys Vector\n        map.keys = new Vector(`${data.prefix}u`);\n        map.keys.length = data.keys.length;\n        // reconstruct values LookupMap\n        map.values = new LookupMap(`${data.prefix}m`);\n        return map;\n    }\n}\n/**\n * An iterator for the UnorderedMap collection.\n */\nclass UnorderedMapIterator {\n    /**\n     * @param unorderedMap - The unordered map collection to create an iterator for.\n     * @param options - Options for retrieving and storing data.\n     */\n    constructor(unorderedMap, options) {\n        this.options = options;\n        this.keys = new VectorIterator(unorderedMap.keys);\n        this.map = unorderedMap.values;\n    }\n    next() {\n        const key = this.keys.next();\n        if (key.done) {\n            return { value: [key.value, null], done: key.done };\n        }\n        const valueAndIndex = this.map.get(key.value);\n        assert(valueAndIndex !== null, ERR_INCONSISTENT_STATE);\n        return {\n            done: key.done,\n            value: [key.value, getValueWithOptions(valueAndIndex[0], this.options)],\n        };\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes, bytesToU8Array, assert, serializeValueWithOptions, ERR_INCONSISTENT_STATE, } from \"../utils\";\nimport { Vector, VectorIterator } from \"./vector\";\nfunction serializeIndex(index) {\n    const data = new Uint32Array([index]);\n    const array = new Uint8Array(data.buffer);\n    return u8ArrayToBytes(array);\n}\nfunction deserializeIndex(rawIndex) {\n    const array = bytesToU8Array(rawIndex);\n    const [data] = new Uint32Array(array.buffer);\n    return data;\n}\n/**\n * An unordered set that stores data in NEAR storage.\n */\nexport class UnorderedSet {\n    /**\n     * @param prefix - The byte prefix to use when storing elements inside this collection.\n     */\n    constructor(prefix) {\n        this.prefix = prefix;\n        this.elementIndexPrefix = `${prefix}i`;\n        this.elements = new Vector(`${prefix}e`);\n    }\n    /**\n     * The number of elements stored in the collection.\n     */\n    get length() {\n        return this.elements.length;\n    }\n    /**\n     * Checks whether the collection is empty.\n     */\n    isEmpty() {\n        return this.elements.isEmpty();\n    }\n    /**\n     * Checks whether the collection contains the value.\n     *\n     * @param element - The value for which to check the presence.\n     * @param options - Options for storing data.\n     */\n    contains(element, options) {\n        const indexLookup = this.elementIndexPrefix + serializeValueWithOptions(element, options);\n        return near.storageHasKey(indexLookup);\n    }\n    /**\n     * If the set did not have this value present, `true` is returned.\n     * If the set did have this value present, `false` is returned.\n     *\n     * @param element - The value to store in the collection.\n     * @param options - Options for storing the data.\n     */\n    set(element, options) {\n        const indexLookup = this.elementIndexPrefix + serializeValueWithOptions(element, options);\n        if (near.storageRead(indexLookup)) {\n            return false;\n        }\n        const nextIndex = this.length;\n        const nextIndexRaw = serializeIndex(nextIndex);\n        near.storageWrite(indexLookup, nextIndexRaw);\n        this.elements.push(element, options);\n        return true;\n    }\n    /**\n     * Returns true if the element was present in the set.\n     *\n     * @param element - The entry to remove.\n     * @param options - Options for retrieving and storing data.\n     */\n    remove(element, options) {\n        const indexLookup = this.elementIndexPrefix + serializeValueWithOptions(element, options);\n        const indexRaw = near.storageRead(indexLookup);\n        if (!indexRaw) {\n            return false;\n        }\n        // If there is only one element then swap remove simply removes it without\n        // swapping with the last element.\n        if (this.length === 1) {\n            near.storageRemove(indexLookup);\n            const index = deserializeIndex(indexRaw);\n            this.elements.swapRemove(index);\n            return true;\n        }\n        // If there is more than one element then swap remove swaps it with the last\n        // element.\n        const lastElement = this.elements.get(this.length - 1, options);\n        assert(!!lastElement, ERR_INCONSISTENT_STATE);\n        near.storageRemove(indexLookup);\n        // If the removed element was the last element from keys, then we don't need to\n        // reinsert the lookup back.\n        if (lastElement !== element) {\n            const lastLookupElement = this.elementIndexPrefix +\n                serializeValueWithOptions(lastElement, options);\n            near.storageWrite(lastLookupElement, indexRaw);\n        }\n        const index = deserializeIndex(indexRaw);\n        this.elements.swapRemove(index);\n        return true;\n    }\n    /**\n     * Remove all of the elements stored within the collection.\n     */\n    clear(options) {\n        for (const element of this.elements) {\n            const indexLookup = this.elementIndexPrefix + serializeValueWithOptions(element, options);\n            near.storageRemove(indexLookup);\n        }\n        this.elements.clear();\n    }\n    [Symbol.iterator]() {\n        return this.elements[Symbol.iterator]();\n    }\n    /**\n     * Create a iterator on top of the default collection iterator using custom options.\n     *\n     * @param options - Options for retrieving and storing the data.\n     */\n    createIteratorWithOptions(options) {\n        return {\n            [Symbol.iterator]: () => new VectorIterator(this.elements, options),\n        };\n    }\n    /**\n     * Return a JavaScript array of the data stored within the collection.\n     *\n     * @param options - Options for retrieving and storing the data.\n     */\n    toArray(options) {\n        const array = [];\n        const iterator = options ? this.createIteratorWithOptions(options) : this;\n        for (const value of iterator) {\n            array.push(value);\n        }\n        return array;\n    }\n    /**\n     * Extends the current collection with the passed in array of elements.\n     *\n     * @param elements - The elements to extend the collection with.\n     */\n    extend(elements) {\n        for (const element of elements) {\n            this.set(element);\n        }\n    }\n    /**\n     * Serialize the collection.\n     *\n     * @param options - Options for storing the data.\n     */\n    serialize(options) {\n        return serializeValueWithOptions(this, options);\n    }\n    /**\n     * Converts the deserialized data from storage to a JavaScript instance of the collection.\n     *\n     * @param data - The deserialized data to create an instance from.\n     */\n    static reconstruct(data) {\n        const set = new UnorderedSet(data.prefix);\n        // reconstruct Vector\n        const elementsPrefix = data.prefix + \"e\";\n        set.elements = new Vector(elementsPrefix);\n        set.elements.length = data.elements.length;\n        return set;\n    }\n}\n","import { assert } from \"./utils\";\nimport * as near from \"./api\";\n/**\n * A promise action which can be executed on the NEAR blockchain.\n */\nexport class PromiseAction {\n}\n/**\n * A create account promise action.\n *\n * @extends {PromiseAction}\n */\nexport class CreateAccount extends PromiseAction {\n    add(promiseIndex) {\n        near.promiseBatchActionCreateAccount(promiseIndex);\n    }\n}\n/**\n * A deploy contract promise action.\n *\n * @extends {PromiseAction}\n */\nexport class DeployContract extends PromiseAction {\n    /**\n     * @param code - The code of the contract to be deployed.\n     */\n    constructor(code) {\n        super();\n        this.code = code;\n    }\n    add(promiseIndex) {\n        near.promiseBatchActionDeployContract(promiseIndex, this.code);\n    }\n}\n/**\n * A function call promise action.\n *\n * @extends {PromiseAction}\n */\nexport class FunctionCall extends PromiseAction {\n    /**\n     * @param functionName - The name of the function to be called.\n     * @param args - The arguments to be passed to the function.\n     * @param amount - The amount of NEAR to attach to the call.\n     * @param gas - The amount of Gas to attach to the call.\n     */\n    constructor(functionName, args, amount, gas) {\n        super();\n        this.functionName = functionName;\n        this.args = args;\n        this.amount = amount;\n        this.gas = gas;\n    }\n    add(promiseIndex) {\n        near.promiseBatchActionFunctionCall(promiseIndex, this.functionName, this.args, this.amount, this.gas);\n    }\n}\n/**\n * A function call weight promise action.\n *\n * @extends {PromiseAction}\n */\nexport class FunctionCallWeight extends PromiseAction {\n    /**\n     * @param functionName - The name of the function to be called.\n     * @param args - The arguments to be passed to the function.\n     * @param amount - The amount of NEAR to attach to the call.\n     * @param gas - The amount of Gas to attach to the call.\n     * @param weight - The weight of unused Gas to use.\n     */\n    constructor(functionName, args, amount, gas, weight) {\n        super();\n        this.functionName = functionName;\n        this.args = args;\n        this.amount = amount;\n        this.gas = gas;\n        this.weight = weight;\n    }\n    add(promiseIndex) {\n        near.promiseBatchActionFunctionCallWeight(promiseIndex, this.functionName, this.args, this.amount, this.gas, this.weight);\n    }\n}\n/**\n * A transfer promise action.\n *\n * @extends {PromiseAction}\n */\nexport class Transfer extends PromiseAction {\n    /**\n     * @param amount - The amount of NEAR to tranfer.\n     */\n    constructor(amount) {\n        super();\n        this.amount = amount;\n    }\n    add(promiseIndex) {\n        near.promiseBatchActionTransfer(promiseIndex, this.amount);\n    }\n}\n/**\n * A stake promise action.\n *\n * @extends {PromiseAction}\n */\nexport class Stake extends PromiseAction {\n    /**\n     * @param amount - The amount of NEAR to tranfer.\n     * @param publicKey - The public key to use for staking.\n     */\n    constructor(amount, publicKey) {\n        super();\n        this.amount = amount;\n        this.publicKey = publicKey;\n    }\n    add(promiseIndex) {\n        near.promiseBatchActionStake(promiseIndex, this.amount, this.publicKey.data);\n    }\n}\n/**\n * A add full access key promise action.\n *\n * @extends {PromiseAction}\n */\nexport class AddFullAccessKey extends PromiseAction {\n    /**\n     * @param publicKey - The public key to add as a full access key.\n     * @param nonce - The nonce to use.\n     */\n    constructor(publicKey, nonce) {\n        super();\n        this.publicKey = publicKey;\n        this.nonce = nonce;\n    }\n    add(promiseIndex) {\n        near.promiseBatchActionAddKeyWithFullAccess(promiseIndex, this.publicKey.data, this.nonce);\n    }\n}\n/**\n * A add access key promise action.\n *\n * @extends {PromiseAction}\n */\nexport class AddAccessKey extends PromiseAction {\n    /**\n     * @param publicKey - The public key to add as a access key.\n     * @param allowance - The allowance for the key in yoctoNEAR.\n     * @param receiverId - The account ID of the reciever.\n     * @param functionNames - The names of funcitons to authorize.\n     * @param nonce - The nonce to use.\n     */\n    constructor(publicKey, allowance, receiverId, functionNames, nonce) {\n        super();\n        this.publicKey = publicKey;\n        this.allowance = allowance;\n        this.receiverId = receiverId;\n        this.functionNames = functionNames;\n        this.nonce = nonce;\n    }\n    add(promiseIndex) {\n        near.promiseBatchActionAddKeyWithFunctionCall(promiseIndex, this.publicKey.data, this.nonce, this.allowance, this.receiverId, this.functionNames);\n    }\n}\n/**\n * A delete key promise action.\n *\n * @extends {PromiseAction}\n */\nexport class DeleteKey extends PromiseAction {\n    /**\n     * @param publicKey - The public key to delete from the account.\n     */\n    constructor(publicKey) {\n        super();\n        this.publicKey = publicKey;\n    }\n    add(promiseIndex) {\n        near.promiseBatchActionDeleteKey(promiseIndex, this.publicKey.data);\n    }\n}\n/**\n * A delete account promise action.\n *\n * @extends {PromiseAction}\n */\nexport class DeleteAccount extends PromiseAction {\n    /**\n     * @param beneficiaryId - The beneficiary of the account deletion - the account to recieve all of the remaining funds of the deleted account.\n     */\n    constructor(beneficiaryId) {\n        super();\n        this.beneficiaryId = beneficiaryId;\n    }\n    add(promiseIndex) {\n        near.promiseBatchActionDeleteAccount(promiseIndex, this.beneficiaryId);\n    }\n}\nclass PromiseSingle {\n    constructor(accountId, actions, after, promiseIndex) {\n        this.accountId = accountId;\n        this.actions = actions;\n        this.after = after;\n        this.promiseIndex = promiseIndex;\n    }\n    constructRecursively() {\n        if (this.promiseIndex !== null) {\n            return this.promiseIndex;\n        }\n        const promiseIndex = this.after\n            ? near.promiseBatchThen(this.after.constructRecursively(), this.accountId)\n            : near.promiseBatchCreate(this.accountId);\n        this.actions.forEach((action) => action.add(promiseIndex));\n        this.promiseIndex = promiseIndex;\n        return promiseIndex;\n    }\n}\nexport class PromiseJoint {\n    constructor(promiseA, promiseB, promiseIndex) {\n        this.promiseA = promiseA;\n        this.promiseB = promiseB;\n        this.promiseIndex = promiseIndex;\n    }\n    constructRecursively() {\n        if (this.promiseIndex !== null) {\n            return this.promiseIndex;\n        }\n        const result = near.promiseAnd(this.promiseA.constructRecursively(), this.promiseB.constructRecursively());\n        this.promiseIndex = result;\n        return result;\n    }\n}\n/**\n * A high level class to construct and work with NEAR promises.\n */\nexport class NearPromise {\n    /**\n     * @param subtype - The subtype of the promise.\n     * @param shouldReturn - Whether the promise should return.\n     */\n    constructor(subtype, shouldReturn) {\n        this.subtype = subtype;\n        this.shouldReturn = shouldReturn;\n    }\n    /**\n     * Creates a new promise to the provided account ID.\n     *\n     * @param accountId - The account ID on which to call the promise.\n     */\n    static new(accountId) {\n        const subtype = new PromiseSingle(accountId, [], null, null);\n        return new NearPromise(subtype, false);\n    }\n    addAction(action) {\n        if (this.subtype instanceof PromiseJoint) {\n            throw new Error(\"Cannot add action to a joint promise.\");\n        }\n        this.subtype.actions.push(action);\n        return this;\n    }\n    /**\n     * Creates a create account promise action and adds it to the current promise.\n     */\n    createAccount() {\n        return this.addAction(new CreateAccount());\n    }\n    /**\n     * Creates a deploy contract promise action and adds it to the current promise.\n     *\n     * @param code - The code of the contract to be deployed.\n     */\n    deployContract(code) {\n        return this.addAction(new DeployContract(code));\n    }\n    /**\n     * Creates a function call promise action and adds it to the current promise.\n     *\n     * @param functionName - The name of the function to be called.\n     * @param args - The arguments to be passed to the function.\n     * @param amount - The amount of NEAR to attach to the call.\n     * @param gas - The amount of Gas to attach to the call.\n     */\n    functionCall(functionName, args, amount, gas) {\n        return this.addAction(new FunctionCall(functionName, args, amount, gas));\n    }\n    /**\n     * Creates a function call weight promise action and adds it to the current promise.\n     *\n     * @param functionName - The name of the function to be called.\n     * @param args - The arguments to be passed to the function.\n     * @param amount - The amount of NEAR to attach to the call.\n     * @param gas - The amount of Gas to attach to the call.\n     * @param weight - The weight of unused Gas to use.\n     */\n    functionCallWeight(functionName, args, amount, gas, weight) {\n        return this.addAction(new FunctionCallWeight(functionName, args, amount, gas, weight));\n    }\n    /**\n     * Creates a transfer promise action and adds it to the current promise.\n     *\n     * @param amount - The amount of NEAR to tranfer.\n     */\n    transfer(amount) {\n        return this.addAction(new Transfer(amount));\n    }\n    /**\n     * Creates a stake promise action and adds it to the current promise.\n     *\n     * @param amount - The amount of NEAR to tranfer.\n     * @param publicKey - The public key to use for staking.\n     */\n    stake(amount, publicKey) {\n        return this.addAction(new Stake(amount, publicKey));\n    }\n    /**\n     * Creates a add full access key promise action and adds it to the current promise.\n     * Uses 0n as the nonce.\n     *\n     * @param publicKey - The public key to add as a full access key.\n     */\n    addFullAccessKey(publicKey) {\n        return this.addFullAccessKeyWithNonce(publicKey, 0n);\n    }\n    /**\n     * Creates a add full access key promise action and adds it to the current promise.\n     * Allows you to specify the nonce.\n     *\n     * @param publicKey - The public key to add as a full access key.\n     * @param nonce - The nonce to use.\n     */\n    addFullAccessKeyWithNonce(publicKey, nonce) {\n        return this.addAction(new AddFullAccessKey(publicKey, nonce));\n    }\n    /**\n     * Creates a add access key promise action and adds it to the current promise.\n     * Uses 0n as the nonce.\n     *\n     * @param publicKey - The public key to add as a access key.\n     * @param allowance - The allowance for the key in yoctoNEAR.\n     * @param receiverId - The account ID of the reciever.\n     * @param functionNames - The names of funcitons to authorize.\n     */\n    addAccessKey(publicKey, allowance, receiverId, functionNames) {\n        return this.addAccessKeyWithNonce(publicKey, allowance, receiverId, functionNames, 0n);\n    }\n    /**\n     * Creates a add access key promise action and adds it to the current promise.\n     * Allows you to specify the nonce.\n     *\n     * @param publicKey - The public key to add as a access key.\n     * @param allowance - The allowance for the key in yoctoNEAR.\n     * @param receiverId - The account ID of the reciever.\n     * @param functionNames - The names of funcitons to authorize.\n     * @param nonce - The nonce to use.\n     */\n    addAccessKeyWithNonce(publicKey, allowance, receiverId, functionNames, nonce) {\n        return this.addAction(new AddAccessKey(publicKey, allowance, receiverId, functionNames, nonce));\n    }\n    /**\n     * Creates a delete key promise action and adds it to the current promise.\n     *\n     * @param publicKey - The public key to delete from the account.\n     */\n    deleteKey(publicKey) {\n        return this.addAction(new DeleteKey(publicKey));\n    }\n    /**\n     * Creates a delete account promise action and adds it to the current promise.\n     *\n     * @param beneficiaryId - The beneficiary of the account deletion - the account to recieve all of the remaining funds of the deleted account.\n     */\n    deleteAccount(beneficiaryId) {\n        return this.addAction(new DeleteAccount(beneficiaryId));\n    }\n    /**\n     * Joins the provided promise with the current promise, making the current promise a joint promise subtype.\n     *\n     * @param other - The promise to join with the current promise.\n     */\n    and(other) {\n        const subtype = new PromiseJoint(this, other, null);\n        return new NearPromise(subtype, false);\n    }\n    /**\n     * Adds a callback to the current promise.\n     *\n     * @param other - The promise to be executed as the promise.\n     */\n    then(other) {\n        assert(other.subtype instanceof PromiseSingle, \"Cannot callback joint promise.\");\n        assert(other.subtype.after === null, \"Cannot callback promise which is already scheduled after another\");\n        other.subtype.after = this;\n        return other;\n    }\n    /**\n     * Sets the shouldReturn field to true.\n     */\n    asReturn() {\n        this.shouldReturn = true;\n        return this;\n    }\n    /**\n     * Recursively goes through the current promise to get the promise index.\n     */\n    constructRecursively() {\n        const result = this.subtype.constructRecursively();\n        if (this.shouldReturn) {\n            near.promiseReturn(result);\n        }\n        return result;\n    }\n    /**\n     * Called by NearBindgen, when return object is a NearPromise instance.\n     */\n    onReturn() {\n        this.asReturn().constructRecursively();\n    }\n}\n","import { assert, LookupMap, near, NearPromise, UnorderedMap, UnorderedSet } from \"near-sdk-js\";\nimport { bytes, serialize } from \"near-sdk-js/lib/utils\";\n\ntype Option<T> = T | null;\n\nconst GAS_FOR_RESOLVE_TRANSFER = BigInt(15_000_000_000_000);\nconst GAS_FOR_NFT_TRANSFER_CALL =\nBigInt(30_000_000_000_000) + GAS_FOR_RESOLVE_TRANSFER;\nconst GAS_FOR_NFT_APPROVE = BigInt(20_000_000_000_000);\n\nexport class Token {\n  token_id: string;\n  owner_id: string;\n  metadata: TokenMetadata;\n  approved_account_ids: Record<string, number>;\n\n  constructor(token_id, owner_id, metadata, approved_account_ids) {\n    this.token_id = token_id;\n    this.owner_id = owner_id;\n    this.metadata = metadata;\n    this.approved_account_ids = approved_account_ids;\n  }\n}\n\nexport class TokenMetadata {\n  title: string|null; // ex. \"Arch Nemesis: Mail Carrier\" or \"Parcel #5055\"\n  description: string|null; // free-form description\n  media: string|null; // URL to associated media, preferably to decentralized, content-addressed storage\n  media_hash: string|null; // Base64-encoded sha256 hash of content referenced by the `media` field. Required if `media` is included.\n  copies: number|null; // number of copies of this set of metadata in existence when token was minted.\n  issued_at: number|null; // When token was issued or minted, Unix epoch in milliseconds\n  expires_at: number|null; // When token expires, Unix epoch in milliseconds\n  starts_at: number|null; // When token starts being valid, Unix epoch in milliseconds\n  updated_at: number|null; // When token was last updated, Unix epoch in milliseconds\n  extra: string|null; // anything extra the NFT wants to store on-chain. Can be stringified JSON.\n  reference: string|null; // URL to an off-chain JSON file with more info.\n  reference_hash: string|null; // Base64-encoded sha256 hash of JSON from reference field. Required if `reference` is included.\n\n  constructor(\n    title, // ex. \"Arch Nemesis: Mail Carrier\" or \"Parcel #5055\"\n    description, // free-form description\n    media, // URL to associated media, preferably to decentralized, content-addressed storage\n    media_hash, // Base64-encoded sha256 hash of content referenced by the `media` field. Required if `media` is included.\n    copies, // number of copies of this set of metadata in existence when token was minted.\n    issued_at, // ISO 8601 datetime when token was issued or minted\n    expires_at, // ISO 8601 datetime when token expires\n    starts_at, // ISO 8601 datetime when token starts being valid\n    updated_at, // ISO 8601 datetime when token was last updated\n    extra, // anything extra the NFT wants to store on-chain. Can be stringified JSON.\n    reference, // URL to an off-chain JSON file with more info.\n    reference_hash // Base64-encoded sha256 hash of JSON from reference field. Required if `reference` is included.\n  ) {\n    this.title = title;\n    this.description = description;\n    this.media = media;\n    this.media_hash = media_hash;\n    this.copies = copies;\n    this.issued_at = issued_at;\n    this.expires_at = expires_at;\n    this.starts_at = starts_at;\n    this.updated_at = updated_at;\n    this.extra = extra;\n    this.reference = reference;\n    this.reference_hash = reference_hash;\n  }\n  assert_valid() {\n    assert((this.media != null) == (this.media_hash != null), \"Media and media hash must be present\");\n    if (this.media_hash != null) {\n      assert(this.media_hash.length == 32, \"Media hash has to be 32 bytes\");\n    }\n    assert((this.reference != null) == (this.reference_hash != null), \"Reference and reference hash must be present\");\n    if (this.reference_hash != null) {\n      assert(this.reference_hash.length == 32, \"Reference hash has to be 32 bytes\");\n    }\n  }\n  static reconstruct(data) {\n    return new TokenMetadata(data.title, data.description, data.media, data.media_hash, data.copies, data.issued_at, data.expires_at, data.starts_at, data.updated_at, data.extra, data.reference, data.reference_hash);\n  }\n}\n\nexport class Token5073 {\n  owner_by_id:UnorderedMap<string>;\n  approvals_by_id: Option<LookupMap<{ [approvals: string]: bigint }>>;\n  next_approval_id_by_id: Option<LookupMap<bigint>>;\n  tokens_per_owner: Option<LookupMap<UnorderedSet<string>>>;\n  token_metadata_by_id: Option<LookupMap<TokenMetadata>>;\n\n  constructor() {\n    this.owner_by_id = new UnorderedMap(\"\");\n    this.token_metadata_by_id = null;\n    this.tokens_per_owner = null;\n    this.approvals_by_id = null;\n    this.next_approval_id_by_id = null;\n  }\n\n  nft_transfer({\n    receiver_id,\n    token_id,\n    approval_id,\n    memo,\n  }: {\n    receiver_id: string;\n    token_id: string;\n    approval_id?: bigint;\n    memo?: string;\n  }) {\n    const sender_id = near.predecessorAccountId();\n    this.internal_transfer(sender_id, receiver_id, token_id, approval_id, memo);\n  }\n\n  nft_transfer_call({\n    receiver_id,\n    token_id,\n    approval_id,\n    memo,\n    msg,\n  }: {\n    receiver_id: string;\n    token_id: string;\n    approval_id?: bigint;\n    memo?: string;\n    msg: string;\n  }) {\n    assert(\n      near.prepaidGas() > GAS_FOR_NFT_TRANSFER_CALL,\n      \"Not enough prepaid gas\"\n    );\n    const sender_id = near.predecessorAccountId();\n    const [previous_owner_id, approved_account_ids] = this.internal_transfer(\n      sender_id,\n      receiver_id,\n      token_id,\n      approval_id,\n      memo\n    );\n\n    const promise = NearPromise.new(receiver_id)\n      .functionCall(\n        \"nft_on_transfer\",\n        JSON.stringify({ sender_id, previous_owner_id, token_id, msg }),\n        BigInt(0),\n        near.prepaidGas() - GAS_FOR_NFT_TRANSFER_CALL\n      )\n      .then(\n        NearPromise.new(near.currentAccountId()).functionCall(\n          \"nft_resolve_transfer\",\n            JSON.stringify({\n              previous_owner_id,\n              receiver_id,\n              token_id,\n              approved_account_ids,\n            }),\n          BigInt(0),\n          GAS_FOR_RESOLVE_TRANSFER\n        )\n      );\n    return promise;\n  }\n\n  internal_transfer(\n    sender_id: string,\n    receiver_id: string,\n    token_id: string,\n    approval_id?: bigint,\n    memo?: string\n  ): [string, Option<{ [approvals: string]: bigint }>] {\n    const owner_id = this.owner_by_id.get(token_id);\n    if (owner_id == null) {\n      throw new Error(\"Token not found\");\n    }\n\n    const approved_account_ids = this.approvals_by_id?.remove(token_id);\n\n    let sender_id_authorized: string | undefined;\n    if (sender_id != owner_id) {\n      if (!approved_account_ids) {\n        throw new Error(\"Unauthorized\");\n      }\n\n      const actual_approval_id = approved_account_ids[sender_id];\n      if (!actual_approval_id) {\n        throw new Error(\"Sender not approved\");\n      }\n\n      assert(\n        approval_id === undefined || approval_id == actual_approval_id,\n        `The actual approval_id ${actual_approval_id} is different from the given ${approval_id}`\n      );\n      sender_id_authorized = sender_id;\n    } else {\n      sender_id_authorized = undefined;\n    }\n    assert(owner_id != receiver_id, \"Current and next owner must differ\");\n    this.internal_transfer_unguarded(token_id, owner_id, receiver_id);\n\n    return [owner_id, approved_account_ids];\n  }\n\n  nft_token({\n    token_id,\n  }: {\n    token_id: string;\n  }): Option<Token> {\n    const owner_id = this.owner_by_id.get(token_id);\n    if (owner_id == null) {\n      return null;\n    }\n    const metadata = this.token_metadata_by_id?.get(token_id, {\n      reconstructor: TokenMetadata.reconstruct,\n    });\n    const approved_account_ids = this.approvals_by_id?.get(token_id) as Option<{\n      [approvals: string]: bigint;\n    }>;\n    return new Token(token_id, owner_id, metadata, approved_account_ids);\n  }\n\n  nft_resolve_transfer({\n    previous_owner_id,\n    receiver_id,\n    token_id,\n    approved_account_ids,\n  }: {\n    previous_owner_id: string;\n    receiver_id: string;\n    token_id: string;\n    approved_account_ids?: { [approvals: string]: bigint };\n  }): boolean {\n    let must_revert = false;\n    let p: string;\n    try {\n      p = near.promiseResult(0);\n    } catch (e) {\n      if (e.message.includes(\"Not Ready\")) {\n        throw new Error();\n      } else {\n        must_revert = true;\n      }\n    }\n    if (!must_revert) {\n      try {\n        const yes_or_no = JSON.parse(p);\n        if (typeof yes_or_no == \"boolean\") {\n          must_revert = yes_or_no;\n        } else {\n          must_revert = true;\n        }\n      } catch (_e) {\n        must_revert = true;\n      }\n    }\n\n    if (!must_revert) {\n      return true;\n    }\n\n    const current_owner = this.owner_by_id.get(token_id) as Option<string>;\n    if (current_owner) {\n      if (current_owner != receiver_id) {\n        return true;\n      }\n    } else {\n      if (approved_account_ids) {\n        this.refund_storage_deposit(\n          previous_owner_id,\n          serialize(approved_account_ids).length\n        );\n      }\n      return true;\n    }\n\n    this.internal_transfer_unguarded(token_id, receiver_id, previous_owner_id);\n\n    if (this.approvals_by_id) {\n      const receiver_approvals = this.approvals_by_id.get(token_id);\n      if (receiver_approvals) {\n        this.refund_storage_deposit(\n          receiver_id,\n          serialize(receiver_approvals).length\n        );\n      }\n      if (approved_account_ids) {\n        this.approvals_by_id.set(token_id, approved_account_ids);\n      }\n    }\n    return false;\n  }\n\n  internal_transfer_unguarded(\n    token_id: string,\n    from: string,\n    to: string\n  ) {\n    this.owner_by_id.set(token_id, to);\n\n    if (this.tokens_per_owner) {\n      const owner_tokens_set = this.tokens_per_owner.get(from, {\n        reconstructor: UnorderedSet.reconstruct,\n      });\n      if (owner_tokens_set == null) {\n        throw new Error(\"Unable to access tokens per owner in unguarded call.\");\n      }\n      owner_tokens_set.remove(token_id);\n      if (owner_tokens_set.isEmpty()) {\n        this.tokens_per_owner.remove(from);\n      } else {\n        this.tokens_per_owner.set(from, owner_tokens_set);\n      }\n\n      let receiver_tokens_set = this.tokens_per_owner.get(to, {\n        reconstructor: UnorderedSet.reconstruct,\n      });\n\n      receiver_tokens_set.set(token_id);\n      this.tokens_per_owner.set(to, receiver_tokens_set);\n    }\n  }\n\n  refund_storage_deposit(account_id, storage_released) {\n    const promise_id = near.promiseBatchCreate(account_id);\n    near.promiseBatchActionTransfer(promise_id, BigInt(storage_released) * near.storageByteCost());\n    near.promiseReturn(promise_id);\n  }\n\n  nft_approve({\n    token_id,\n    account_id,\n    msg,\n  }: {\n    token_id: string;\n    account_id: string;\n    msg: string;\n  }): Option<NearPromise> {\n    if (this.approvals_by_id === null) {\n      throw new Error(\"NFT does not support Approval Management\");\n    }\n    const approvals_by_id = this.approvals_by_id;\n\n    const token = this.owner_by_id.get(token_id);\n    if (token === null) {\n      throw new Error(\"Token not found\");\n    }\n    const owner_id = token\n\n    assert(\n      near.predecessorAccountId() === owner_id,\n      \"Predecessor must be token owner.\"\n    );\n\n    if (this.next_approval_id_by_id === null) {\n      throw new Error(\"next_approval_by_id must be set for approval ext\");\n    }\n\n    const next_approval_id_by_id = this.next_approval_id_by_id;\n    const approved_account_ids = approvals_by_id.get(token_id) ?? {};\n    const approval_id = next_approval_id_by_id.get(token_id) ?? BigInt(1);\n    const old_approved_account_ids_size =\n      serialize(approved_account_ids).length;\n    approved_account_ids[account_id] = approval_id;\n    const new_approved_account_ids_size =\n      serialize(approved_account_ids).length;\n\n    approvals_by_id.set(token_id, approved_account_ids);\n\n    next_approval_id_by_id.set(token_id, approval_id + BigInt(1));\n\n    const storage_used =\n      new_approved_account_ids_size - old_approved_account_ids_size;\n    this.refund_deposit(BigInt(storage_used));\n\n    if (msg) {\n      return NearPromise.new(account_id).functionCall(\n        \"nft_on_approve\",\n        serialize({ token_id, owner_id, approval_id, msg }),\n        BigInt(0),\n        near.prepaidGas() - GAS_FOR_NFT_APPROVE\n      );\n    }\n    return null;\n  }\n\n  refund_deposit_to_account(storage_used, account_id) {\n    const required_cost = near.storageByteCost() * storage_used;\n    const attached_deposit = near.attachedDeposit();\n    assert(required_cost <= attached_deposit, `Must attach ${required_cost} yoctoNEAR to cover storage`);\n    const refund = attached_deposit - required_cost;\n    if (refund > BigInt(1)) {\n        const promise_id = near.promiseBatchCreate(account_id);\n        near.promiseBatchActionTransfer(promise_id, refund);\n        near.promiseReturn(promise_id);\n    }\n  }\n\n  refund_deposit(storage_used) {\n    this.refund_deposit_to_account(storage_used, near.predecessorAccountId());\n  }\n\n  nft_revoke({\n    token_id,\n    account_id,\n  }: {\n    token_id: string;\n    account_id: string;\n  }) {\n    if (this.approvals_by_id === null) {\n      throw new Error(\"NFT does not support Approval Management\");\n    }\n    const approvals_by_id = this.approvals_by_id;\n\n    const token = this.owner_by_id.get(token_id);\n    if (token === null) {\n      throw new Error(\"Token not found\");\n    }\n    const owner_id = token\n\n    const predecessorAccountId = near.predecessorAccountId();\n    assert(\n      predecessorAccountId === owner_id,\n      \"Predecessor must be token owner.\"\n    );\n\n    const approved_account_ids = approvals_by_id.get(token_id);\n    const old_approved_account_ids_size =\n      serialize(approved_account_ids).length;\n    let new_approved_account_ids_size;\n\n    if (approved_account_ids[account_id]) {\n      delete approved_account_ids[account_id];\n      if (Object.keys(approved_account_ids).length === 0) {\n        approvals_by_id.remove(token_id);\n        new_approved_account_ids_size = serialize(approved_account_ids).length;\n      } else {\n        approvals_by_id.set(token_id, approved_account_ids);\n        new_approved_account_ids_size = 0;\n      }\n\n      const promise_id = near.promiseBatchCreate(predecessorAccountId);\n      near.promiseBatchActionTransfer(promise_id, BigInt(new_approved_account_ids_size - old_approved_account_ids_size) * near.storageByteCost());\n      near.promiseReturn(promise_id);\n    }\n  }\n\n  nft_revoke_all({\n    token_id\n  }: {\n    token_id: string\n  }) {\n    if (this.approvals_by_id === null) {\n      throw new Error(\"NFT does not support Approval Management\");\n    }\n    const approvals_by_id = this.approvals_by_id;\n\n    const token = this.owner_by_id.get(token_id);\n    if (token === null) {\n      throw new Error(\"Token not found\");\n    }\n    const owner_id = token\n\n    const predecessorAccountId = near.predecessorAccountId();\n    assert(\n      predecessorAccountId === owner_id,\n      \"Predecessor must be token owner.\"\n    );\n\n    const approved_account_ids = approvals_by_id.get(token_id);\n    if (approved_account_ids) {\n      const promise_id = near.promiseBatchCreate(predecessorAccountId);\n      near.promiseBatchActionTransfer(promise_id, BigInt(serialize(approved_account_ids).length) * near.storageByteCost());\n      near.promiseReturn(promise_id);\n\n      approvals_by_id.remove(token_id);\n    }\n  }\n\n  nft_is_approved({\n    token_id,\n    approved_account_id,\n    approval_id,\n  }: {\n    token_id: string;\n    approved_account_id: string;\n    approval_id?: bigint;\n  }): boolean {\n    const token = this.owner_by_id.get(token_id);\n    if (token === null) {\n      throw new Error(\"Token not found\");\n    }\n    if (this.approvals_by_id === null) {\n      return false;\n    }\n    const approvals_by_id = this.approvals_by_id;\n    const approved_account_ids = approvals_by_id.get(token_id);\n    if (approved_account_ids === null) {\n      return false;\n    }\n\n    const actual_approval_id = approved_account_ids[approved_account_id];\n    if (actual_approval_id === undefined) {\n      return false;\n    }\n\n    if (approval_id) {\n      return BigInt(approval_id) === actual_approval_id;\n    }\n    return true;\n  }\n\n  nft_total_supply(): number {\n    return this.owner_by_id.length;\n  }\n\n  nft_tokens({\n    from_index,\n    limit,\n  }: {\n    from_index?: number;\n    limit?: number;\n  }): Token[] {\n    const start_index = from_index === undefined ? 0 : from_index;\n    assert(\n      this.owner_by_id.length >= start_index,\n      \"Out of bounds, please use a smaller from_index.\"\n    );\n    let l = limit === undefined ? 2 ** 32 : limit;\n    assert(l > 0, \"limit must be greater than 0.\");\n    l = Math.min(l, this.owner_by_id.length - start_index);\n    const ret: Token[] = [];\n    for (let i = start_index; i < start_index + l; i++) {\n      const token_id = this.owner_by_id.keys.get(i);\n      const owner_id = this.owner_by_id.get(token_id);\n      ret.push(this.enum_get_token(owner_id, token_id));\n    }\n    return ret;\n  }\n\n  private enum_get_token(owner_id: string, token_id: string): Token {\n    const metadata = this.token_metadata_by_id.get(token_id, {\n      reconstructor: TokenMetadata.reconstruct,\n    });\n    const approved_account_ids = this.approvals_by_id.get(token_id, {\n      defaultValue: {},\n    });\n    return new Token(token_id, owner_id, metadata, approved_account_ids);\n  }\n\n  nft_supply_for_owner({ account_id }: { account_id: string }): number {\n    const tokens_per_owner = this.tokens_per_owner;\n    assert(\n      tokens_per_owner !== null,\n      \"Could not find tokens_per_owner when calling a method on the enumeration standard.\"\n    );\n\n    const account_tokens = tokens_per_owner.get(account_id, {\n      reconstructor: UnorderedSet.reconstruct,\n    });\n    return account_tokens === null ? 0 : account_tokens.length;\n  }\n\n  nft_tokens_for_owner({\n    account_id,\n    from_index,\n    limit,\n  }: {\n    account_id: string;\n    from_index?: number;\n    limit?: number;\n  }): Token[] {\n    const tokens_per_owner = this.tokens_per_owner;\n    assert(\n      tokens_per_owner !== undefined,\n      \"Could not find tokens_per_owner when calling a method on the enumeration standard.\"\n    );\n    const token_set = tokens_per_owner.get(account_id, {\n      reconstructor: UnorderedSet.reconstruct,\n    });\n    assert(token_set !== null, \"Token set is empty\");\n\n    const start_index = from_index === undefined ? 0 : from_index;\n    assert(\n      token_set.length >= start_index,\n      \"Out of bounds, please use a smaller from_index.\"\n    );\n    let l = limit === undefined ? 2 ** 32 : limit;\n    assert(l > 0, \"limit must be greater than 0.\");\n    l = Math.min(l, token_set.length - start_index);\n\n    const ret: Token[] = [];\n    for (let i = start_index; i < start_index + l; i++) {\n      const token_id = token_set.elements.get(i);\n      const owner_id = this.owner_by_id.get(token_id);\n      ret.push(this.enum_get_token(owner_id, token_id));\n    }\n    return ret;\n  }\n\n  init() {\n    let approvals_by_id: Option<LookupMap<{ [approvals: string]: bigint }>>;\n    let next_approval_id_by_id: Option<LookupMap<bigint>>;\n    approvals_by_id = null;\n    next_approval_id_by_id = null;\n\n    this.owner_by_id = null;\n    this.token_metadata_by_id = null;\n    this.tokens_per_owner = null;\n    this.approvals_by_id = approvals_by_id;\n    this.next_approval_id_by_id = next_approval_id_by_id;\n  }\n\n  internal_mint(\n    token_id: string,\n    token_owner_id: string,\n    token_metadata?: TokenMetadata\n  ): Token {\n    const token = this.internal_mint_with_refund(\n      token_id,\n      token_owner_id,\n      token_metadata,\n      near.predecessorAccountId()\n    );\n\n    return token;\n  }\n\n  internal_mint_with_refund(\n    token_id: string,\n    token_owner_id: string,\n    token_metadata?: TokenMetadata,\n    refund_id?: string\n  ): Token {\n    let initial_storage_usage: Option<[string, bigint]> = null;\n    if (refund_id) {\n      initial_storage_usage = [refund_id, near.storageUsage()];\n    }\n    if (this.token_metadata_by_id && token_metadata === undefined) {\n      throw new Error(\"Must provide metadata\");\n    }\n    if (this.owner_by_id.get(token_id)) {\n      throw new Error(\"token_id must be unique\");\n    }\n\n    const owner_id = token_owner_id;\n    this.owner_by_id.set(token_id, owner_id);\n    this.token_metadata_by_id?.set(token_id, token_metadata);\n    if (this.tokens_per_owner) {\n      let token_ids = this.tokens_per_owner.get(owner_id, {\n        reconstructor: UnorderedSet.reconstruct,\n      });\n      token_ids.set(token_id);\n      this.tokens_per_owner.set(owner_id, token_ids);\n    }\n\n    const approved_account_ids = this.approvals_by_id ? {} : undefined;\n    if (initial_storage_usage) {\n      const [id, storage_usage] = initial_storage_usage;\n      this.refund_deposit_to_account(near.storageUsage() - storage_usage, id);\n    }\n    return new Token(token_id, owner_id, token_metadata, approved_account_ids);\n  }\n}\n","// Find all our documentation at https://docs.near.org\nimport { NearBindgen, call, view, PromiseOrValue, assert, initialize, NearPromise } from 'near-sdk-js';\nimport { Token, Token5073, TokenMetadata } from './token';\n\ntype Option<T> = T | null;\nconst NFT_METADATA_SPEC = \"nft-1.0.0\";\n\nclass NFTContractMetadata {\n  spec: string; // required, essentially a version like \"nft-2.0.0\", replacing \"2.0.0\" with the implemented version of NEP-177\n  name: string; // required, ex. \"Mochi Rising — Digital Edition\" or \"Metaverse 3\"\n  symbol: string; // required, ex. \"MOCHI\"\n  icon: string|null; // Data URL\n  base_uri: string|null; // Centralized gateway known to have reliable access to decentralized storage assets referenced by `reference` or `media` URLs\n  reference: string|null; // URL to a JSON file with more info\n  reference_hash: string|null; // Base64-encoded sha256 hash of JSON from reference field. Required if `reference` is included.\n\n  constructor() {\n    this.spec = NFT_METADATA_SPEC;\n    this.name = \"\";\n    this.symbol = \"\";\n    this.icon = null;\n    this.base_uri = null;\n    this.reference = null;\n    this.reference_hash = null;\n  }\n\n  init(spec, name, symbol, icon, base_uri, reference, reference_hash) {\n    this.spec = spec;\n    this.name = name;\n    this.symbol = symbol;\n    this.icon = icon;\n    this.base_uri = base_uri;\n    this.reference = reference;\n    this.reference_hash = reference_hash;\n  }\n  assert_valid() {\n    assert(this.spec == NFT_METADATA_SPEC, \"Spec is not NFT metadata\");\n    assert((this.reference != null) == (this.reference_hash != null), \"Reference and reference hash must be present\");\n    if (this.reference_hash != null) {\n      assert(this.reference_hash.length == 32, \"Hash has to be 32 bytes\");\n    }\n  }\n  static reconstruct(data) {\n    const metadata = new NFTContractMetadata();\n    Object.assign(metadata, data);\n    return metadata;\n  }\n}\n\n@NearBindgen({})\nclass NFT5073 {\n  tokens: Token5073;\n  metadata: Option<NFTContractMetadata>;\n\n  constructor() {\n    this.tokens = new Token5073();\n    this.metadata = new NFTContractMetadata();\n  }\n\n  @view({})\n  nft_metadata(): NFTContractMetadata {\n    assert(this.metadata !== null, \"Metadata not initialized\");\n    return this.metadata;\n  }\n\n  @view({})\n  nft_total_supply(): number {\n    return this.tokens.nft_total_supply();\n  }\n\n  @view({})\n  nft_tokens({\n    from_index,\n    limit,\n  }: {\n    from_index?: number;\n    limit?: number;\n  }): Token[] {\n    return this.tokens.nft_tokens({ from_index, limit });\n  }\n\n  @view({})\n  nft_supply_for_owner({ account_id }: { account_id: string }): number {\n    return this.tokens.nft_supply_for_owner({ account_id });\n  }\n\n  @view({})\n  nft_tokens_for_owner({\n    account_id,\n    from_index,\n    limit,\n  }: {\n    account_id: string;\n    from_index?: number;\n    limit?: number;\n  }): Token[] {\n    return this.tokens.nft_tokens_for_owner({ account_id, from_index, limit });\n  }\n\n  @initialize({ requireInit: true })\n  init({\n    owner_id,\n    metadata,\n  }: {\n    owner_id: string;\n    metadata: NFTContractMetadata;\n  }) {\n    this.metadata = Object.assign(new NFTContractMetadata(), metadata);\n    this.metadata.assert_valid();\n    this.tokens = new Token5073();\n    this.tokens.init();\n  }\n\n  @call({ payableFunction: true })\n  nft_approve({\n    token_id,\n    account_id,\n    msg,\n  }: {\n    token_id: string;\n    account_id: string;\n    msg?: string;\n  }): Option<NearPromise> {\n    return this.tokens.nft_approve({ token_id, account_id, msg });\n  }\n\n  @call({ payableFunction: true })\n  nft_revoke({\n    token_id,\n    account_id,\n  }: {\n    token_id: string;\n    account_id: string;\n  }) {\n    return this.tokens.nft_revoke({ token_id, account_id });\n  }\n\n  @call({ payableFunction: true })\n  nft_revoke_all({ token_id }: { token_id: string }) {\n    return this.tokens.nft_revoke_all({ token_id });\n  }\n\n  @view({})\n  nft_is_approved({\n    token_id,\n    approved_account_id,\n    approval_id,\n  }: {\n    token_id: string;\n    approved_account_id: string;\n    approval_id?: bigint;\n  }): boolean {\n    return this.tokens.nft_is_approved({\n      token_id,\n      approved_account_id,\n      approval_id,\n    });\n  }\n\n  @call({})\n  nft_resolve_transfer({\n    previous_owner_id,\n    receiver_id,\n    token_id,\n    approved_account_ids,\n  }: {\n    previous_owner_id: string;\n    receiver_id: string;\n    token_id: string;\n    approved_account_ids?: { [approval: string]: bigint };\n  }): boolean {\n    return this.tokens.nft_resolve_transfer({\n      previous_owner_id,\n      receiver_id,\n      token_id,\n      approved_account_ids,\n    });\n  }\n\n  @call({ payableFunction: true })\n  nft_transfer({\n    receiver_id,\n    token_id,\n    approval_id,\n    memo,\n  }: {\n    receiver_id: string;\n    token_id: string;\n    approval_id?: bigint;\n    memo?: string;\n  }) {\n    this.tokens.nft_transfer({ receiver_id, token_id, approval_id, memo });\n  }\n\n  @call({ payableFunction: true })\n  nft_transfer_call({\n    receiver_id,\n    token_id,\n    approval_id,\n    memo,\n    msg,\n  }: {\n    receiver_id: string;\n    token_id: string;\n    approval_id?: bigint;\n    memo?: string;\n    msg: string;\n  }): PromiseOrValue<boolean> {\n    return this.tokens.nft_transfer_call({\n      receiver_id,\n      token_id,\n      approval_id,\n      memo,\n      msg,\n    });\n  }\n\n  @view({})\n  nft_token({ token_id }: { token_id: string }): Option<Token> {\n    return this.tokens.nft_token({ token_id });\n  }\n\n  @call({ payableFunction: true })\n  nft_mint({\n    token_id,\n    token_owner_id,\n    token_metadata,\n  }: {\n    token_id: string;\n    token_owner_id: string;\n    token_metadata: TokenMetadata;\n  }) {\n    this.tokens.internal_mint(token_id, token_owner_id, token_metadata);\n  }\n}\n"],"names":["PromiseIndexBrand","TYPE_KEY","TypeBrand","ERR_INCONSISTENT_STATE","ERR_INDEX_OUT_OF_BOUNDS","u8ArrayToBytes","array","reduce","result","value","String","fromCharCode","bytesToU8Array","bytes","Uint8Array","from","map","byte","charCodeAt","assert","expression","message","Error","getValueWithOptions","options","deserializer","deserialize","deserialized","undefined","defaultValue","reconstructor","serializeValueWithOptions","serializer","serialize","valueToSerialize","JSON","stringify","key","toString","BIGINT","Date","toISOString","DATE","valueToDeserialize","parse","_","Object","keys","length","every","includes","BigInt","PromiseResult","PromiseError","assertNumber","n","Number","isSafeInteger","chain","args","wrap","a","b","c","encode","Array","reverse","acc","i","decode","alphabet","digits","isArray","input","letter","index","indexOf","join","separator","to","split","padding","bits","chr","data","push","end","slice","normalize","fn","convertRadix","pos","res","forEach","d","carry","done","digit","digitBase","Math","floor","gcd","radix2carry","convertRadix2","mask","radix","num","radix2","revPadding","unsafeWrapper","apply","e","base16","base32","s","toUpperCase","replace","base64","base64url","genBase58","abc","base58","XMR_BLOCK_LEN","base58xmr","block","subarray","padStart","str","blockLen","j","concat","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","words","encodingConst","len","v","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","actualLength","TypeError","toLowerCase","lowered","sepIndex","lastIndexOf","sum","endsWith","decodeUnsafe","decodeToBytes","utf8","TextDecoder","TextEncoder","hex","CODERS","CurveType","DataLength","U64_MAX","EVICTED_REGISTER","predecessorAccountId","env","predecessor_account_id","read_register","currentAccountId","current_account_id","attachedDeposit","attached_deposit","prepaidGas","prepaid_gas","storageRead","returnValue","storage_read","storageHasKey","storage_has_key","storageGetEvicted","storageUsage","storage_usage","storageWrite","storage_write","storageRemove","storage_remove","storageByteCost","promiseAnd","promiseIndexes","promise_and","promiseBatchCreate","accountId","promise_batch_create","promiseBatchThen","promiseIndex","promise_batch_then","promiseBatchActionCreateAccount","promise_batch_action_create_account","promiseBatchActionDeployContract","code","promise_batch_action_deploy_contract","promiseBatchActionFunctionCall","methodName","amount","gas","promise_batch_action_function_call","promiseBatchActionTransfer","promise_batch_action_transfer","promiseBatchActionStake","publicKey","promise_batch_action_stake","promiseBatchActionAddKeyWithFullAccess","nonce","promise_batch_action_add_key_with_full_access","promiseBatchActionAddKeyWithFunctionCall","allowance","receiverId","methodNames","promise_batch_action_add_key_with_function_call","promiseBatchActionDeleteKey","promise_batch_action_delete_key","promiseBatchActionDeleteAccount","beneficiaryId","promise_batch_action_delete_account","promiseBatchActionFunctionCallWeight","weight","promise_batch_action_function_call_weight","promiseResult","status","promise_result","Successful","Failed","NotReady","promiseReturn","promise_return","initialize","_empty","_target","_key","_descriptor","view","call","privateFunction","payableFunction","descriptor","originalMethod","near","NearBindgen","requireInit","target","_create","_getState","rawState","_deserialize","_saveToStorage","objectToSave","_serialize","_getArgs","forReturn","_reconstruct","classObject","plainObject","item","constructor","reconstruct","_requireInit","LookupMap","keyPrefix","containsKey","storageKey","get","remove","set","newValue","storageValue","extend","keyValuePairs","indexToKey","Uint32Array","buffer","Vector","isEmpty","swapRemove","pop","last","element","lastIndex","lastKey","elements","Symbol","iterator","VectorIterator","createIteratorWithOptions","toArray","clear","vector","current","next","UnorderedMap","values","valueAndIndex","serialized","newElementIndex","oldValue","oldIndex","oldValueAndIndex","swappedKey","swappedValueAndIndex","UnorderedMapIterator","unorderedMap","serializeIndex","deserializeIndex","rawIndex","UnorderedSet","elementIndexPrefix","contains","indexLookup","nextIndex","nextIndexRaw","indexRaw","lastElement","lastLookupElement","elementsPrefix","PromiseAction","CreateAccount","add","DeployContract","FunctionCall","functionName","FunctionCallWeight","Transfer","Stake","AddFullAccessKey","AddAccessKey","functionNames","DeleteKey","DeleteAccount","PromiseSingle","actions","after","constructRecursively","action","PromiseJoint","promiseA","promiseB","NearPromise","subtype","shouldReturn","new","addAction","createAccount","deployContract","functionCall","functionCallWeight","transfer","stake","addFullAccessKey","addFullAccessKeyWithNonce","addAccessKey","addAccessKeyWithNonce","deleteKey","deleteAccount","and","other","then","asReturn","onReturn","GAS_FOR_RESOLVE_TRANSFER","GAS_FOR_NFT_TRANSFER_CALL","GAS_FOR_NFT_APPROVE","Token","token_id","owner_id","metadata","approved_account_ids","TokenMetadata","title","description","media","media_hash","copies","issued_at","expires_at","starts_at","updated_at","extra","reference","reference_hash","assert_valid","Token5073","owner_by_id","token_metadata_by_id","tokens_per_owner","approvals_by_id","next_approval_id_by_id","nft_transfer","receiver_id","approval_id","memo","sender_id","internal_transfer","nft_transfer_call","msg","previous_owner_id","promise","actual_approval_id","internal_transfer_unguarded","nft_token","nft_resolve_transfer","must_revert","p","yes_or_no","_e","current_owner","refund_storage_deposit","receiver_approvals","owner_tokens_set","receiver_tokens_set","account_id","storage_released","promise_id","nft_approve","token","old_approved_account_ids_size","new_approved_account_ids_size","storage_used","refund_deposit","refund_deposit_to_account","required_cost","refund","nft_revoke","nft_revoke_all","nft_is_approved","approved_account_id","nft_total_supply","nft_tokens","from_index","start_index","l","min","ret","enum_get_token","nft_supply_for_owner","account_tokens","nft_tokens_for_owner","token_set","init","internal_mint","token_owner_id","token_metadata","internal_mint_with_refund","refund_id","initial_storage_usage","token_ids","id","NFT_METADATA_SPEC","NFTContractMetadata","spec","name","symbol","icon","base_uri","assign","NFT5073","tokens","nft_metadata","nft_mint"],"mappings":"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"}